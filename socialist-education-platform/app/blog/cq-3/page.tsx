"use client";
import React, { useState, useEffect } from "react";
import { Clock, User, Tag, ArrowRight, BookOpen, Target } from "lucide-react";

interface Subsection {
  title: string;
  points: string[];
  image?: string; // th√™m field ·∫£nh cho subsection
}

interface Section {
  id: string;
  title: string;
  icon: React.ReactNode;
  content?: string[];
  subsections?: Subsection[];
}

const CQ3Blog = () => {
  const [scrollY, setScrollY] = useState(0);

  useEffect(() => {
    const handleScroll = () => setScrollY(window.scrollY);
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const sections: Section[] = [
    {
      id: "history",
      title: "D√¢n ch·ªß l√† ph·∫°m tr√π l·ªãch s·ª≠",
      icon: <BookOpen className="w-6 h-6" />,
      subsections: [
        {
          title: "Xu·∫•t hi·ªán v√† t·ªìn t·∫°i g·∫Øn v·ªõi x√£ h·ªôi c√≥ giai c·∫•p",
          image: "/images/dan-chu.jpg",
          points: [
            "Khi x√£ h·ªôi c·ªông s·∫£n nguy√™n th·ªßy tan r√£, giai c·∫•p v√† nh√† n∆∞·ªõc ra ƒë·ªùi th√¨ d√¢n ch·ªß m·ªõi xu·∫•t hi·ªán nh∆∞ m·ªôt h√¨nh th·ª©c t·ªï ch·ª©c ch√≠nh tr·ªã.",
            "Trong x√£ h·ªôi nguy√™n th·ªßy ch∆∞a c√≥ giai c·∫•p, ch∆∞a c√≥ nh√† n∆∞·ªõc n√™n ch∆∞a c√≥ d√¢n ch·ªß theo nghƒ©a ch√≠nh tr·ªã.",
          ],
        },
        {
          title:
            "Mang t√≠nh l·ªãch s·ª≠ ‚Äì thay ƒë·ªïi theo t·ª´ng h√¨nh th√°i kinh t·∫ø - x√£ h·ªôi",
          image: "/images/lich-su-dan-chu.jpg",
          points: [
            "M·ªói ki·ªÉu nh√† n∆∞·ªõc (chi·∫øm h·ªØu n√¥ l·ªá, phong ki·∫øn, t∆∞ s·∫£n, XHCN) c√≥ m·ªôt n·ªÅn d√¢n ch·ªß t∆∞∆°ng ·ª©ng.",
            "V√≠ d·ª•: d√¢n ch·ªß ch·ªß n√¥, d√¢n ch·ªß t∆∞ s·∫£n, d√¢n ch·ªß XHCN‚Ä¶ kh√°c nhau v·ªÅ b·∫£n ch·∫•t, ph·∫°m vi v√† ƒë·ªëi t∆∞·ª£ng ph·ª•c v·ª•.",
          ],
        },
        {
          title: "C√≥ t√≠nh k·∫ø th·ª´a v√† ph√°t tri·ªÉn",
          image: "/images/dan-chu-ke-thua-phat-trien.jpeg",
          points: [
            "D√¢n ch·ªß kh√¥ng b·∫•t bi·∫øn; n√≥ v·∫≠n ƒë·ªông c√πng v·ªõi s·ª± ph√°t tri·ªÉn c·ªßa l·ª±c l∆∞·ª£ng s·∫£n xu·∫•t, quan h·ªá giai c·∫•p v√† ƒë·∫•u tranh x√£ h·ªôi.",
            "D√¢n ch·ªß XHCN k·∫ø th·ª´a nh·ªØng gi√° tr·ªã ti·∫øn b·ªô c·ªßa c√°c n·ªÅn d√¢n ch·ªß tr∆∞·ªõc nh∆∞ng cao h∆°n, r·ªông m·ªü h∆°n v√¨ ph·ª•c v·ª• ƒëa s·ªë nh√¢n d√¢n lao ƒë·ªông.",
          ],
        },
      ],
    },
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-100">
      {/* Hero Section */}
      <div className="relative overflow-hidden bg-gradient-to-r from-blue-900 via-purple-900 to-indigo-900">
        <div className="absolute inset-0 bg-black/20"></div>
        <div
          className="absolute inset-0 bg-gradient-to-r from-blue-600/10 to-purple-600/10"
          style={{ transform: `translateY(${scrollY * 0.3}px)` }}
        ></div>

        <div className="relative container mx-auto px-6 py-20">
          <div className="max-w-4xl mx-auto text-center text-white">
            <div className="inline-flex items-center bg-white/10 backdrop-blur-sm px-4 py-2 rounded-full mb-6">
              <Tag className="w-4 h-4 mr-2" />
              <span className="text-sm font-medium">
                Ch·ªß nghƒ©a x√£ h·ªôi khoa h·ªçc
              </span>
            </div>

            <h1 className="text-5xl md:text-6xl font-extrabold mb-6 leading-tight tracking-tight">
              D√¢n ch·ªß l√†{" "}
              <span className="text-transparent bg-clip-text bg-gradient-to-r from-cyan-400 to-blue-400">
                ph·∫°m tr√π l·ªãch s·ª≠
              </span>
            </h1>

            <p className="text-xl md:text-2xl mb-8 text-blue-100 leading-relaxed">
              Ph√¢n t√≠ch ƒë·∫∑c ƒëi·ªÉm, t√≠nh l·ªãch s·ª≠, k·∫ø th·ª´a v√† ph√°t tri·ªÉn c·ªßa d√¢n
              ch·ªß
            </p>

            <div className="flex flex-wrap justify-center gap-6 text-blue-200">
              <div className="flex items-center">
                <Clock className="w-5 h-5 mr-2" />
                <span>10 ph√∫t ƒë·ªçc</span>
              </div>
              <div className="flex items-center">
                <User className="w-5 h-5 mr-2" />
                <span>T√°c gi·∫£: </span>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="container mx-auto px-6 py-16">
        <div className="max-w-6xl mx-auto grid grid-cols-1 lg:grid-cols-4 gap-8">
          {/* Table of contents */}
          <aside className="lg:col-span-1 hidden lg:block sticky top-28 self-start">
            <div className="bg-white/90 backdrop-blur-sm rounded-2xl shadow-lg p-6 border border-white/20">
              <h2 className="text-xl font-bold text-gray-800 mb-4 flex items-center">
                <BookOpen className="w-5 h-5 mr-2 text-blue-600" />
                M·ª•c l·ª•c
              </h2>
              <nav className="space-y-3">
                {sections.map((s) => (
                  <a
                    key={s.id}
                    href={`#${s.id}`}
                    className="flex items-center p-3 rounded-lg hover:bg-blue-50 transition-all duration-200 text-gray-700"
                  >
                    <div className="w-9 h-9 bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg flex items-center justify-center text-white mr-3">
                      {s.icon}
                    </div>
                    <div className="flex-1 text-sm font-medium">{s.title}</div>
                    <ArrowRight className="w-4 h-4 text-gray-400" />
                  </a>
                ))}
              </nav>
            </div>
          </aside>

          {/* Content */}
          <main className="lg:col-span-3 space-y-8">
            {sections.map((section) => (
              <section
                key={section.id}
                id={section.id}
                className="bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 overflow-hidden p-8"
              >
                <div className="flex items-start gap-6">
                  <div className="p-4 rounded-xl bg-gradient-to-r from-blue-600 to-purple-600 text-white flex-shrink-0">
                    {section.icon}
                  </div>

                  <div className="flex-1">
                    <h2 className="text-2xl md:text-3xl font-bold text-gray-800 mb-4">
                      {section.title}
                    </h2>

                    {section.subsections && (
                      <div className="grid grid-cols-1 gap-6">
                        {section.subsections.map((subsection, subIndex) => (
                          <div
                            key={subIndex}
                            className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 border border-white/30"
                          >
                            {/* ·∫£nh subsection */}
                            {subsection.image && (
                              <img
                                src={subsection.image}
                                alt={subsection.title}
                                className="w-full mb-4 rounded-lg shadow-md"
                              />
                            )}

                            <h3 className="text-lg font-bold text-gray-800 mb-4 flex items-center">
                              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white font-bold mr-3">
                                {String.fromCharCode(97 + subIndex)}
                              </div>
                              {subsection.title}
                            </h3>

                            <div className="space-y-3 ml-11">
                              {subsection.points.map((point, pointIndex) => (
                                <div
                                  key={pointIndex}
                                  className="flex items-start"
                                >
                                  <div className="w-1.5 h-1.5 bg-blue-500 rounded-full mt-3 mr-4 flex-shrink-0"></div>
                                  <p className="text-gray-700 leading-relaxed">
                                    {point}
                                  </p>
                                </div>
                              ))}
                            </div>
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              </section>
            ))}

            {/* Conclusion */}
            <div className="bg-gradient-to-r from-blue-800 to-purple-700 rounded-2xl shadow-2xl p-8 text-white">
              <div className="flex items-center mb-6">
                <Target className="w-8 h-8 mr-4 text-yellow-400" />
                <h2 className="text-3xl font-bold">üéØ K·∫øt lu·∫≠n</h2>
              </div>
              <div className="bg-white/10 backdrop-blur-sm rounded-xl p-6">
                <p className="text-lg leading-relaxed">
                  D√¢n ch·ªß l√† m·ªôt ph·∫°m tr√π l·ªãch s·ª≠ v√¨ n√≥ ch·ªâ n·∫£y sinh, t·ªìn t·∫°i v√†
                  bi·∫øn ƒë·ªïi trong nh·ªØng ƒëi·ªÅu ki·ªán l·ªãch s·ª≠ ‚Äì x√£ h·ªôi nh·∫•t ƒë·ªãnh,
                  ph√°t tri·ªÉn t·ª´ th·∫•p ƒë·∫øn cao, t·ª´ ch∆∞a ho√†n thi·ªán ƒë·∫øn ho√†n thi·ªán
                  g·∫Øn li·ªÅn v·ªõi s·ª± t·ªìn t·∫°i v√† ph√°t tri·ªÉn c·ªßa giai c·∫•p, nh√† n∆∞·ªõc,
                  v√† h√¨nh th√°i kinh t·∫ø - x√£ h·ªôi.
                </p>
              </div>
            </div>
          </main>
        </div>
      </div>
    </div>
  );
};

export default CQ3Blog;
